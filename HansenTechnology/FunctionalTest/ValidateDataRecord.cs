///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace HansenTechnology.FunctionalTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateDataRecord recording.
    /// </summary>
    [TestModule("5452b7c7-8d85-48a0-a701-eade34d45def", ModuleType.Recording, 1)]
    public partial class ValidateDataRecord : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::HansenTechnology.HansenTechnologyRepository repository.
        /// </summary>
        public static global::HansenTechnology.HansenTechnologyRepository repo = global::HansenTechnology.HansenTechnologyRepository.Instance;

        static ValidateDataRecord instance = new ValidateDataRecord();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateDataRecord()
        {
            varName = "Slavisa";
            varGreatings = "Welcome, Slavisa!";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateDataRecord Instance
        {
            get { return instance; }
        }

#region Variables

        string _varName;

        /// <summary>
        /// Gets or sets the value of variable varName.
        /// </summary>
        [TestVariable("1eb53cee-b10e-4b2e-87f2-737efd155757")]
        public string varName
        {
            get { return _varName; }
            set { _varName = value; }
        }

        string _varGreatings;

        /// <summary>
        /// Gets or sets the value of variable varGreatings.
        /// </summary>
        [TestVariable("609f632e-4ca1-4076-87e4-2e9d8d86c854")]
        public string varGreatings
        {
            get { return _varGreatings; }
            set { _varGreatings = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varGreatings) on item 'RxMainFrame.LblWelcomeMessage'.", repo.RxMainFrame.LblWelcomeMessageInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.RxMainFrame.LblWelcomeMessageInfo, "Text", varGreatings);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
