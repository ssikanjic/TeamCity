///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace HansenTechnology.FunctionalTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The DataRecord recording.
    /// </summary>
    [TestModule("ea95a1c7-6183-4294-847a-b4014711aa4f", ModuleType.Recording, 1)]
    public partial class DataRecord : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::HansenTechnology.HansenTechnologyRepository repository.
        /// </summary>
        public static global::HansenTechnology.HansenTechnologyRepository repo = global::HansenTechnology.HansenTechnologyRepository.Instance;

        static DataRecord instance = new DataRecord();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public DataRecord()
        {
            varName = "Slavisa";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static DataRecord Instance
        {
            get { return instance; }
        }

#region Variables

        string _varName;

        /// <summary>
        /// Gets or sets the value of variable varName.
        /// </summary>
        [TestVariable("bb08dd02-9ee7-4b17-8ee6-07ad5fbffcc1")]
        public string varName
        {
            get { return _varName; }
            set { _varName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // Acivate AUT
            acivate();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RxMainFrame.EnterYourName' at 60;10.", repo.RxMainFrame.EnterYourNameInfo, new RecordItemIndex(1));
            repo.RxMainFrame.EnterYourName.Click("60;10");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varName' with focus on 'RxMainFrame.EnterYourName'.", repo.RxMainFrame.EnterYourNameInfo, new RecordItemIndex(2));
            repo.RxMainFrame.EnterYourName.PressKeys(varName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RxMainFrame.BtnSubmitUserName' at 37;13.", repo.RxMainFrame.BtnSubmitUserNameInfo, new RecordItemIndex(3));
            repo.RxMainFrame.BtnSubmitUserName.Click("37;13");
            Delay.Milliseconds(0);
            
            // Maximize AUT
            maximize();
            Delay.Milliseconds(0);
            
            Report.Snapshot(ReportLevel.Info, "User", "", repo.RxMainFrame.Self, new RecordItemIndex(5));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.RxMainFrame.Self, false, new RecordItemIndex(6));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
